package com.admin.process.dao;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.admin.process.constants.LogConstants;

/**
 * <code>DBConnection</code> manages connections for the Admin application. It
 * is a minimalist implementation for a single database connection. Real world
 * applications are not recommended to use this and should have a more robust
 * approach.
 * 
 * @author Ravi
 * 
 */
public class DBConnection {
	
	final static org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(DBConnection.class);

	// Private sole connection object
	private static Connection con;

	// Initialize the table during application start-up
	static {
		try {
			Class.forName("org.hsqldb.jdbc.JDBCDriver");
		} catch (ClassNotFoundException e) {
			logger.error(e.getMessage(), e);
		}
		try {
			
			//Database path
			String dbPath = System.getProperty("user.home") + "\\" + LogConstants.DBNAME;
			// Initialize the connection
			con = DriverManager
					.getConnection("jdbc:hsqldb:file:" + dbPath + ";user=SA;create=true");
			boolean isTableexist = tableExist(con,"logauditor");
				if (!isTableexist) {
					con.createStatement()
					.executeUpdate(
							"CREATE TABLE logauditor (id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null,eventid VARCHAR(100),eventduration VARCHAR(200),alert BOOLEAN DEFAULT FALSE NOT NULL )");
				}
			} catch (SQLException e) {
				System.out.println(e.getMessage().toString());
			logger.error(e.getMessage(), e);
			
		}
	}

	// Private constructor
	private DBConnection() {
	}

	/**
	 * Returns the only connection to database
	 * 
	 * @return {@link Connection}
	 */
	public static Connection getConnection() {
		return con;
	}
	
	public static boolean tableExist(Connection conn, String tableName) throws SQLException {
	    boolean tExists = false;
	    try (ResultSet rs = conn.getMetaData().getTables(null, null, tableName, null)) {
	        while (rs.next()) { 
	            String tName = rs.getString("TABLE_NAME");
	            if (tName != null && tName.equals(tableName)) {
	                tExists = true;
	                break;
	            }
	        }
	    }
	    return tExists;
	}
}